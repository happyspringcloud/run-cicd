#!/bin/sh

if [ "" == "${WORKDIR}" ]; then
  if [ -d "${HOME}/run-cicd" ]; then 
    CTRLDIR=${HOME}/run-cicd
  elif [ -d "./run-cicd" ]; then
    CTRLDIR=./run-cicd
  else
    CTRLDIR=""
  fi
else
  CTRLDIR=${WORKDIR}/run-cicd
fi
if [ "" == "${CTRLDIR}" ]; then
  echo "Can't find CI/CD resources !"
  exit 1
fi

echo ""
echo "************* RUN PUSH Container image *****************"
echo ""
echo "STEP1: Get Parameters"

# get parameters
if ([ $# -lt 2 ]) || ([ $# -eq 1 ] && [ "$1" == "-h" -o "$1" == "--help" ]); then
  echo "push-image <reg username> <reg password> <root directory>"
  echo " reg username: container image registry username "
  echo " reg password: container image registry password "
  echo " root directory: project의 최상위 디렉토리. '.'은 현재 디렉토리 의미함. "
  echo " ex) ./push-image user1 password1 ~/work"
  echo " ex) ./push-image user1 password1 ."
  exit 1
fi

username=$1
password=$2
basedir=$3
echo ""

# set variables from config.properties: converted from '.' to '_'
echo "STEP2. Set environment variables "
if [ -f ${basedir}/cicd/cicd-common.properties ]; then  # NOT use config server 
  eval $(${CTRLDIR}/cmd/set-env ${basedir}/cicd/cicd-common.properties)
else
  eval $(${CTRLDIR}/cmd/set-env ${basedir}/deploy/cicd.properties)
fi

echo ""

# login image registry to push image: parameters are provided from bamboo pipeline.
echo "STEP3. Login & Push image "
docker login ${image_registry} -u  ${username} -p ${password}
if [ $? == 1 ]; then
  echo "****** FAIL to login image registry: username is $1"
  exit 1
fi

# clone image as 'latest'
echo "*** RUN -> docker tag ${image_registry}/${image_project}/${image_repository}:${image_tag} ${image_registry}/${image_project}/${image_repository}:latest"
docker tag ${image_registry}/${image_project}/${image_repository}:${image_tag} ${image_registry}/${image_project}/${image_repository}:latest

# push them
echo "*** RUN -> docker push ${image_registry}/${image_project}/${image_repository}:${image_tag}"
docker push ${image_registry}/${image_project}/${image_repository}:${image_tag}
echo "*** RUN -> docker push ${image_registry}/${image_project}/${image_repository}:latest"
docker push ${image_registry}/${image_project}/${image_repository}:latest

echo ""
echo "************* END BUILD&PUSH Container image *****************"
echo ""
exit 0

